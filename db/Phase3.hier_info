|TopWiMax_wrapper
CLK_50Mhz => PLL_main:pll1_wrap.refclk
reset => PLL_main:pll1_wrap.rst
reset => MODU_Flag.ACLR
reset => MODU_Counter[0].PRESET
reset => MODU_Counter[1].PRESET
reset => MODU_Counter[2].PRESET
reset => MODU_Counter[3].PRESET
reset => MODU_Counter[4].PRESET
reset => MODU_Counter[5].PRESET
reset => MODU_Counter[6].ACLR
reset => MODU_Counter[7].PRESET
reset => MODU_Counter[8].ACLR
reset => MODU_Counter[9].ACLR
reset => MODU_Counter[10].ACLR
reset => MODU_Counter[11].ACLR
reset => MODU_Counter[12].ACLR
reset => MODU_Counter[13].ACLR
reset => MODU_Counter[14].ACLR
reset => MODU_Counter[15].ACLR
reset => MODU_Counter[16].ACLR
reset => MODU_Counter[17].ACLR
reset => MODU_Counter[18].ACLR
reset => MODU_Counter[19].ACLR
reset => MODU_Counter[20].ACLR
reset => MODU_Counter[21].ACLR
reset => MODU_Counter[22].ACLR
reset => MODU_Counter[23].ACLR
reset => MODU_Counter[24].ACLR
reset => MODU_Counter[25].ACLR
reset => MODU_Counter[26].ACLR
reset => MODU_Counter[27].ACLR
reset => MODU_Counter[28].ACLR
reset => MODU_Counter[29].ACLR
reset => MODU_Counter[30].ACLR
reset => MODU_Counter[31].ACLR
reset => MODU_out_valid~reg0.ACLR
reset => INTER_Flag.ACLR
reset => INTER_Counter[0].PRESET
reset => INTER_Counter[1].PRESET
reset => INTER_Counter[2].PRESET
reset => INTER_Counter[3].PRESET
reset => INTER_Counter[4].PRESET
reset => INTER_Counter[5].PRESET
reset => INTER_Counter[6].ACLR
reset => INTER_Counter[7].PRESET
reset => INTER_Counter[8].ACLR
reset => INTER_Counter[9].ACLR
reset => INTER_Counter[10].ACLR
reset => INTER_Counter[11].ACLR
reset => INTER_Counter[12].ACLR
reset => INTER_Counter[13].ACLR
reset => INTER_Counter[14].ACLR
reset => INTER_Counter[15].ACLR
reset => INTER_Counter[16].ACLR
reset => INTER_Counter[17].ACLR
reset => INTER_Counter[18].ACLR
reset => INTER_Counter[19].ACLR
reset => INTER_Counter[20].ACLR
reset => INTER_Counter[21].ACLR
reset => INTER_Counter[22].ACLR
reset => INTER_Counter[23].ACLR
reset => INTER_Counter[24].ACLR
reset => INTER_Counter[25].ACLR
reset => INTER_Counter[26].ACLR
reset => INTER_Counter[27].ACLR
reset => INTER_Counter[28].ACLR
reset => INTER_Counter[29].ACLR
reset => INTER_Counter[30].ACLR
reset => INTER_Counter[31].ACLR
reset => INTER_output_valid~reg0.ACLR
reset => FEC_Flag.ACLR
reset => FEC_Counter[0].PRESET
reset => FEC_Counter[1].PRESET
reset => FEC_Counter[2].PRESET
reset => FEC_Counter[3].PRESET
reset => FEC_Counter[4].PRESET
reset => FEC_Counter[5].PRESET
reset => FEC_Counter[6].ACLR
reset => FEC_Counter[7].PRESET
reset => FEC_Counter[8].ACLR
reset => FEC_Counter[9].ACLR
reset => FEC_Counter[10].ACLR
reset => FEC_Counter[11].ACLR
reset => FEC_Counter[12].ACLR
reset => FEC_Counter[13].ACLR
reset => FEC_Counter[14].ACLR
reset => FEC_Counter[15].ACLR
reset => FEC_Counter[16].ACLR
reset => FEC_Counter[17].ACLR
reset => FEC_Counter[18].ACLR
reset => FEC_Counter[19].ACLR
reset => FEC_Counter[20].ACLR
reset => FEC_Counter[21].ACLR
reset => FEC_Counter[22].ACLR
reset => FEC_Counter[23].ACLR
reset => FEC_Counter[24].ACLR
reset => FEC_Counter[25].ACLR
reset => FEC_Counter[26].ACLR
reset => FEC_Counter[27].ACLR
reset => FEC_Counter[28].ACLR
reset => FEC_Counter[29].ACLR
reset => FEC_Counter[30].ACLR
reset => FEC_Counter[31].ACLR
reset => FEC_output_valid~reg0.ACLR
reset => RANDI_output_valid~reg0.ACLR
reset => RANDI_Flag.ACLR
reset => RANDI_Counter2[0].PRESET
reset => RANDI_Counter2[1].PRESET
reset => RANDI_Counter2[2].PRESET
reset => RANDI_Counter2[3].PRESET
reset => RANDI_Counter2[4].PRESET
reset => RANDI_Counter2[5].ACLR
reset => RANDI_Counter2[6].PRESET
reset => RANDI_Counter2[7].ACLR
reset => RANDI_Counter2[8].ACLR
reset => RANDI_Counter2[9].ACLR
reset => RANDI_Counter2[10].ACLR
reset => RANDI_Counter2[11].ACLR
reset => RANDI_Counter2[12].ACLR
reset => RANDI_Counter2[13].ACLR
reset => RANDI_Counter2[14].ACLR
reset => RANDI_Counter2[15].ACLR
reset => RANDI_Counter2[16].ACLR
reset => RANDI_Counter2[17].ACLR
reset => RANDI_Counter2[18].ACLR
reset => RANDI_Counter2[19].ACLR
reset => RANDI_Counter2[20].ACLR
reset => RANDI_Counter2[21].ACLR
reset => RANDI_Counter2[22].ACLR
reset => RANDI_Counter2[23].ACLR
reset => RANDI_Counter2[24].ACLR
reset => RANDI_Counter2[25].ACLR
reset => RANDI_Counter2[26].ACLR
reset => RANDI_Counter2[27].ACLR
reset => RANDI_Counter2[28].ACLR
reset => RANDI_Counter2[29].ACLR
reset => RANDI_Counter2[30].ACLR
reset => RANDI_Counter2[31].ACLR
load => TopWiMax:twimax_wrap.load
TopWiMax_wrapper_in_ready => ~NO_FANOUT~
TopWiMax_wrapper_in_valid => ~NO_FANOUT~
RANDI_output_valid <= RANDI_output_valid~reg0.DB_MAX_OUTPUT_PORT_TYPE
FEC_output_valid <= FEC_output_valid~reg0.DB_MAX_OUTPUT_PORT_TYPE
INTER_output_valid <= INTER_output_valid~reg0.DB_MAX_OUTPUT_PORT_TYPE
MODU_out_valid <= MODU_out_valid~reg0.DB_MAX_OUTPUT_PORT_TYPE
TopWiMax_wrapper_out_ready <= comb.DB_MAX_OUTPUT_PORT_TYPE


|TopWiMax_wrapper|PLL_main:pll1_wrap
refclk => PLL_main_0002:pll_main_inst.refclk
rst => PLL_main_0002:pll_main_inst.rst
outclk_0 <= PLL_main_0002:pll_main_inst.outclk_0
outclk_1 <= PLL_main_0002:pll_main_inst.outclk_1
locked <= PLL_main_0002:pll_main_inst.locked


|TopWiMax_wrapper|PLL_main:pll1_wrap|PLL_main_0002:pll_main_inst
refclk => refclk.IN1
rst => rst.IN1
outclk_0 <= altera_pll:altera_pll_i.outclk
outclk_1 <= altera_pll:altera_pll_i.outclk
locked <= altera_pll:altera_pll_i.locked


|TopWiMax_wrapper|PLL_main:pll1_wrap|PLL_main_0002:pll_main_inst|altera_pll:altera_pll_i
refclk => general[0].gpll.I_REFCLK
refclk => general[1].gpll.I_REFCLK
refclk1 => ~NO_FANOUT~
fbclk => ~NO_FANOUT~
rst => general[0].gpll.I_RST
rst => general[1].gpll.I_RST
phase_en => ~NO_FANOUT~
updn => ~NO_FANOUT~
num_phase_shifts[0] => ~NO_FANOUT~
num_phase_shifts[1] => ~NO_FANOUT~
num_phase_shifts[2] => ~NO_FANOUT~
scanclk => ~NO_FANOUT~
cntsel[0] => ~NO_FANOUT~
cntsel[1] => ~NO_FANOUT~
cntsel[2] => ~NO_FANOUT~
cntsel[3] => ~NO_FANOUT~
cntsel[4] => ~NO_FANOUT~
reconfig_to_pll[0] => ~NO_FANOUT~
reconfig_to_pll[1] => ~NO_FANOUT~
reconfig_to_pll[2] => ~NO_FANOUT~
reconfig_to_pll[3] => ~NO_FANOUT~
reconfig_to_pll[4] => ~NO_FANOUT~
reconfig_to_pll[5] => ~NO_FANOUT~
reconfig_to_pll[6] => ~NO_FANOUT~
reconfig_to_pll[7] => ~NO_FANOUT~
reconfig_to_pll[8] => ~NO_FANOUT~
reconfig_to_pll[9] => ~NO_FANOUT~
reconfig_to_pll[10] => ~NO_FANOUT~
reconfig_to_pll[11] => ~NO_FANOUT~
reconfig_to_pll[12] => ~NO_FANOUT~
reconfig_to_pll[13] => ~NO_FANOUT~
reconfig_to_pll[14] => ~NO_FANOUT~
reconfig_to_pll[15] => ~NO_FANOUT~
reconfig_to_pll[16] => ~NO_FANOUT~
reconfig_to_pll[17] => ~NO_FANOUT~
reconfig_to_pll[18] => ~NO_FANOUT~
reconfig_to_pll[19] => ~NO_FANOUT~
reconfig_to_pll[20] => ~NO_FANOUT~
reconfig_to_pll[21] => ~NO_FANOUT~
reconfig_to_pll[22] => ~NO_FANOUT~
reconfig_to_pll[23] => ~NO_FANOUT~
reconfig_to_pll[24] => ~NO_FANOUT~
reconfig_to_pll[25] => ~NO_FANOUT~
reconfig_to_pll[26] => ~NO_FANOUT~
reconfig_to_pll[27] => ~NO_FANOUT~
reconfig_to_pll[28] => ~NO_FANOUT~
reconfig_to_pll[29] => ~NO_FANOUT~
reconfig_to_pll[30] => ~NO_FANOUT~
reconfig_to_pll[31] => ~NO_FANOUT~
reconfig_to_pll[32] => ~NO_FANOUT~
reconfig_to_pll[33] => ~NO_FANOUT~
reconfig_to_pll[34] => ~NO_FANOUT~
reconfig_to_pll[35] => ~NO_FANOUT~
reconfig_to_pll[36] => ~NO_FANOUT~
reconfig_to_pll[37] => ~NO_FANOUT~
reconfig_to_pll[38] => ~NO_FANOUT~
reconfig_to_pll[39] => ~NO_FANOUT~
reconfig_to_pll[40] => ~NO_FANOUT~
reconfig_to_pll[41] => ~NO_FANOUT~
reconfig_to_pll[42] => ~NO_FANOUT~
reconfig_to_pll[43] => ~NO_FANOUT~
reconfig_to_pll[44] => ~NO_FANOUT~
reconfig_to_pll[45] => ~NO_FANOUT~
reconfig_to_pll[46] => ~NO_FANOUT~
reconfig_to_pll[47] => ~NO_FANOUT~
reconfig_to_pll[48] => ~NO_FANOUT~
reconfig_to_pll[49] => ~NO_FANOUT~
reconfig_to_pll[50] => ~NO_FANOUT~
reconfig_to_pll[51] => ~NO_FANOUT~
reconfig_to_pll[52] => ~NO_FANOUT~
reconfig_to_pll[53] => ~NO_FANOUT~
reconfig_to_pll[54] => ~NO_FANOUT~
reconfig_to_pll[55] => ~NO_FANOUT~
reconfig_to_pll[56] => ~NO_FANOUT~
reconfig_to_pll[57] => ~NO_FANOUT~
reconfig_to_pll[58] => ~NO_FANOUT~
reconfig_to_pll[59] => ~NO_FANOUT~
reconfig_to_pll[60] => ~NO_FANOUT~
reconfig_to_pll[61] => ~NO_FANOUT~
reconfig_to_pll[62] => ~NO_FANOUT~
reconfig_to_pll[63] => ~NO_FANOUT~
extswitch => ~NO_FANOUT~
adjpllin => ~NO_FANOUT~
cclk => ~NO_FANOUT~
outclk[0] <= general[0].gpll.O_OUTCLK
outclk[1] <= general[1].gpll.O_OUTCLK
fboutclk <= general[0].gpll.O_FBOUTCLK
locked <= general[0].gpll.LOCKED
phase_done <= <GND>
reconfig_from_pll[0] <= <GND>
reconfig_from_pll[1] <= <GND>
reconfig_from_pll[2] <= <GND>
reconfig_from_pll[3] <= <GND>
reconfig_from_pll[4] <= <GND>
reconfig_from_pll[5] <= <GND>
reconfig_from_pll[6] <= <GND>
reconfig_from_pll[7] <= <GND>
reconfig_from_pll[8] <= <GND>
reconfig_from_pll[9] <= <GND>
reconfig_from_pll[10] <= <GND>
reconfig_from_pll[11] <= <GND>
reconfig_from_pll[12] <= <GND>
reconfig_from_pll[13] <= <GND>
reconfig_from_pll[14] <= <GND>
reconfig_from_pll[15] <= <GND>
reconfig_from_pll[16] <= <GND>
reconfig_from_pll[17] <= <GND>
reconfig_from_pll[18] <= <GND>
reconfig_from_pll[19] <= <GND>
reconfig_from_pll[20] <= <GND>
reconfig_from_pll[21] <= <GND>
reconfig_from_pll[22] <= <GND>
reconfig_from_pll[23] <= <GND>
reconfig_from_pll[24] <= <GND>
reconfig_from_pll[25] <= <GND>
reconfig_from_pll[26] <= <GND>
reconfig_from_pll[27] <= <GND>
reconfig_from_pll[28] <= <GND>
reconfig_from_pll[29] <= <GND>
reconfig_from_pll[30] <= <GND>
reconfig_from_pll[31] <= <GND>
reconfig_from_pll[32] <= <GND>
reconfig_from_pll[33] <= <GND>
reconfig_from_pll[34] <= <GND>
reconfig_from_pll[35] <= <GND>
reconfig_from_pll[36] <= <GND>
reconfig_from_pll[37] <= <GND>
reconfig_from_pll[38] <= <GND>
reconfig_from_pll[39] <= <GND>
reconfig_from_pll[40] <= <GND>
reconfig_from_pll[41] <= <GND>
reconfig_from_pll[42] <= <GND>
reconfig_from_pll[43] <= <GND>
reconfig_from_pll[44] <= <GND>
reconfig_from_pll[45] <= <GND>
reconfig_from_pll[46] <= <GND>
reconfig_from_pll[47] <= <GND>
reconfig_from_pll[48] <= <GND>
reconfig_from_pll[49] <= <GND>
reconfig_from_pll[50] <= <GND>
reconfig_from_pll[51] <= <GND>
reconfig_from_pll[52] <= <GND>
reconfig_from_pll[53] <= <GND>
reconfig_from_pll[54] <= <GND>
reconfig_from_pll[55] <= <GND>
reconfig_from_pll[56] <= <GND>
reconfig_from_pll[57] <= <GND>
reconfig_from_pll[58] <= <GND>
reconfig_from_pll[59] <= <GND>
reconfig_from_pll[60] <= <GND>
reconfig_from_pll[61] <= <GND>
reconfig_from_pll[62] <= <GND>
reconfig_from_pll[63] <= <GND>
activeclk <= <GND>
clkbad[0] <= <GND>
clkbad[1] <= <GND>
phout[0] <= <GND>
phout[1] <= <GND>
phout[2] <= <GND>
phout[3] <= <GND>
phout[4] <= <GND>
phout[5] <= <GND>
phout[6] <= <GND>
phout[7] <= <GND>
lvds_clk[0] <= <GND>
lvds_clk[1] <= <GND>
loaden[0] <= <GND>
loaden[1] <= <GND>
extclk_out[0] <= <GND>
extclk_out[1] <= <GND>
cascade_out[0] <= <GND>
cascade_out[1] <= <GND>
zdbfbclk <> <GND>


|TopWiMax_wrapper|TopWiMax:twimax_wrap
CLK_50Mhz => randi:RANDI1.clk_50MHz
CLK_50Mhz => FEC:fec1.clk_50mhz
CLK_100Mhz => FEC:fec1.clk_100mhz
CLK_100Mhz => INTER:inter1.clk_100MHz
CLK_100Mhz => MODU:modu1.clk_100MHz
reset => randi:RANDI1.reset
reset => FEC:fec1.reset
reset => INTER:inter1.reset
reset => MODU:modu1.reset
load => randi:RANDI1.load
TopWiMax_in_valid => randi:RANDI1.randi_input_valid
TopWiMax_in_ready => MODU:modu1.MODU_input_ready
WiInput => randi:RANDI1.randi_input_data
RANDI_output_valid <= randi:RANDI1.randi_output_valid
Randi_output_data <= randi:RANDI1.randi_output_data
FEC_output_valid <= FEC:fec1.FEC_output_valid
FEC_output_data <= FEC:fec1.FEC_output_data
INTER_output_valid <= INTER:inter1.INTER_Output_valid
INTER_output_data <= INTER:inter1.INTER_Output_data
TopWiMax_out_valid <= MODU:modu1.MODU_output_valid
TopWiMax_out_ready <= randi:RANDI1.randi_output_ready
WiOutput1[0] <= MODU:modu1.MODU_output_Q[0]
WiOutput1[1] <= MODU:modu1.MODU_output_Q[1]
WiOutput1[2] <= MODU:modu1.MODU_output_Q[2]
WiOutput1[3] <= MODU:modu1.MODU_output_Q[3]
WiOutput1[4] <= MODU:modu1.MODU_output_Q[4]
WiOutput1[5] <= MODU:modu1.MODU_output_Q[5]
WiOutput1[6] <= MODU:modu1.MODU_output_Q[6]
WiOutput1[7] <= MODU:modu1.MODU_output_Q[7]
WiOutput1[8] <= MODU:modu1.MODU_output_Q[8]
WiOutput1[9] <= MODU:modu1.MODU_output_Q[9]
WiOutput1[10] <= MODU:modu1.MODU_output_Q[10]
WiOutput1[11] <= MODU:modu1.MODU_output_Q[11]
WiOutput1[12] <= MODU:modu1.MODU_output_Q[12]
WiOutput1[13] <= MODU:modu1.MODU_output_Q[13]
WiOutput1[14] <= MODU:modu1.MODU_output_Q[14]
WiOutput1[15] <= MODU:modu1.MODU_output_Q[15]
WiOutput2[0] <= MODU:modu1.MODU_output_I[0]
WiOutput2[1] <= MODU:modu1.MODU_output_I[1]
WiOutput2[2] <= MODU:modu1.MODU_output_I[2]
WiOutput2[3] <= MODU:modu1.MODU_output_I[3]
WiOutput2[4] <= MODU:modu1.MODU_output_I[4]
WiOutput2[5] <= MODU:modu1.MODU_output_I[5]
WiOutput2[6] <= MODU:modu1.MODU_output_I[6]
WiOutput2[7] <= MODU:modu1.MODU_output_I[7]
WiOutput2[8] <= MODU:modu1.MODU_output_I[8]
WiOutput2[9] <= MODU:modu1.MODU_output_I[9]
WiOutput2[10] <= MODU:modu1.MODU_output_I[10]
WiOutput2[11] <= MODU:modu1.MODU_output_I[11]
WiOutput2[12] <= MODU:modu1.MODU_output_I[12]
WiOutput2[13] <= MODU:modu1.MODU_output_I[13]
WiOutput2[14] <= MODU:modu1.MODU_output_I[14]
WiOutput2[15] <= MODU:modu1.MODU_output_I[15]


|TopWiMax_wrapper|TopWiMax:twimax_wrap|randi:RANDI1
clk_50MHz => counter_reset_seed[0].CLK
clk_50MHz => counter_reset_seed[1].CLK
clk_50MHz => counter_reset_seed[2].CLK
clk_50MHz => counter_reset_seed[3].CLK
clk_50MHz => counter_reset_seed[4].CLK
clk_50MHz => counter_reset_seed[5].CLK
clk_50MHz => counter_reset_seed[6].CLK
clk_50MHz => counter_reset_seed[7].CLK
clk_50MHz => counter_reset_seed[8].CLK
clk_50MHz => counter_reset_seed[9].CLK
clk_50MHz => counter_reset_seed[10].CLK
clk_50MHz => counter_reset_seed[11].CLK
clk_50MHz => counter_reset_seed[12].CLK
clk_50MHz => counter_reset_seed[13].CLK
clk_50MHz => counter_reset_seed[14].CLK
clk_50MHz => counter_reset_seed[15].CLK
clk_50MHz => counter_reset_seed[16].CLK
clk_50MHz => counter_reset_seed[17].CLK
clk_50MHz => counter_reset_seed[18].CLK
clk_50MHz => counter_reset_seed[19].CLK
clk_50MHz => counter_reset_seed[20].CLK
clk_50MHz => counter_reset_seed[21].CLK
clk_50MHz => counter_reset_seed[22].CLK
clk_50MHz => counter_reset_seed[23].CLK
clk_50MHz => counter_reset_seed[24].CLK
clk_50MHz => counter_reset_seed[25].CLK
clk_50MHz => counter_reset_seed[26].CLK
clk_50MHz => counter_reset_seed[27].CLK
clk_50MHz => counter_reset_seed[28].CLK
clk_50MHz => counter_reset_seed[29].CLK
clk_50MHz => counter_reset_seed[30].CLK
clk_50MHz => counter_reset_seed[31].CLK
clk_50MHz => seed_reg[0].CLK
clk_50MHz => seed_reg[1].CLK
clk_50MHz => seed_reg[2].CLK
clk_50MHz => seed_reg[3].CLK
clk_50MHz => seed_reg[4].CLK
clk_50MHz => seed_reg[5].CLK
clk_50MHz => seed_reg[6].CLK
clk_50MHz => seed_reg[7].CLK
clk_50MHz => seed_reg[8].CLK
clk_50MHz => seed_reg[9].CLK
clk_50MHz => seed_reg[10].CLK
clk_50MHz => seed_reg[11].CLK
clk_50MHz => seed_reg[12].CLK
clk_50MHz => seed_reg[13].CLK
clk_50MHz => seed_reg[14].CLK
reset => counter_reset_seed[0].ACLR
reset => counter_reset_seed[1].ACLR
reset => counter_reset_seed[2].ACLR
reset => counter_reset_seed[3].ACLR
reset => counter_reset_seed[4].ACLR
reset => counter_reset_seed[5].ACLR
reset => counter_reset_seed[6].ACLR
reset => counter_reset_seed[7].ACLR
reset => counter_reset_seed[8].ACLR
reset => counter_reset_seed[9].ACLR
reset => counter_reset_seed[10].ACLR
reset => counter_reset_seed[11].ACLR
reset => counter_reset_seed[12].ACLR
reset => counter_reset_seed[13].ACLR
reset => counter_reset_seed[14].ACLR
reset => counter_reset_seed[15].ACLR
reset => counter_reset_seed[16].ACLR
reset => counter_reset_seed[17].ACLR
reset => counter_reset_seed[18].ACLR
reset => counter_reset_seed[19].ACLR
reset => counter_reset_seed[20].ACLR
reset => counter_reset_seed[21].ACLR
reset => counter_reset_seed[22].ACLR
reset => counter_reset_seed[23].ACLR
reset => counter_reset_seed[24].ACLR
reset => counter_reset_seed[25].ACLR
reset => counter_reset_seed[26].ACLR
reset => counter_reset_seed[27].ACLR
reset => counter_reset_seed[28].ACLR
reset => counter_reset_seed[29].ACLR
reset => counter_reset_seed[30].ACLR
reset => counter_reset_seed[31].ACLR
reset => seed_reg[0].ACLR
reset => seed_reg[1].ACLR
reset => seed_reg[2].ACLR
reset => seed_reg[3].ACLR
reset => seed_reg[4].ACLR
reset => seed_reg[5].ACLR
reset => seed_reg[6].ACLR
reset => seed_reg[7].ACLR
reset => seed_reg[8].ACLR
reset => seed_reg[9].ACLR
reset => seed_reg[10].ACLR
reset => seed_reg[11].ACLR
reset => seed_reg[12].ACLR
reset => seed_reg[13].ACLR
reset => seed_reg[14].ACLR
load => seed_reg.OUTPUTSELECT
load => seed_reg.OUTPUTSELECT
load => seed_reg.OUTPUTSELECT
load => seed_reg.OUTPUTSELECT
load => seed_reg.OUTPUTSELECT
load => seed_reg.OUTPUTSELECT
load => seed_reg.OUTPUTSELECT
load => seed_reg.OUTPUTSELECT
load => seed_reg.OUTPUTSELECT
load => seed_reg.OUTPUTSELECT
load => seed_reg.OUTPUTSELECT
load => seed_reg.OUTPUTSELECT
load => seed_reg.OUTPUTSELECT
load => seed_reg.OUTPUTSELECT
load => seed_reg.OUTPUTSELECT
load => counter_reset_seed[0].ENA
load => counter_reset_seed[31].ENA
load => counter_reset_seed[30].ENA
load => counter_reset_seed[29].ENA
load => counter_reset_seed[28].ENA
load => counter_reset_seed[27].ENA
load => counter_reset_seed[26].ENA
load => counter_reset_seed[25].ENA
load => counter_reset_seed[24].ENA
load => counter_reset_seed[23].ENA
load => counter_reset_seed[22].ENA
load => counter_reset_seed[21].ENA
load => counter_reset_seed[20].ENA
load => counter_reset_seed[19].ENA
load => counter_reset_seed[18].ENA
load => counter_reset_seed[17].ENA
load => counter_reset_seed[16].ENA
load => counter_reset_seed[15].ENA
load => counter_reset_seed[14].ENA
load => counter_reset_seed[13].ENA
load => counter_reset_seed[12].ENA
load => counter_reset_seed[11].ENA
load => counter_reset_seed[10].ENA
load => counter_reset_seed[9].ENA
load => counter_reset_seed[8].ENA
load => counter_reset_seed[7].ENA
load => counter_reset_seed[6].ENA
load => counter_reset_seed[5].ENA
load => counter_reset_seed[4].ENA
load => counter_reset_seed[3].ENA
load => counter_reset_seed[2].ENA
load => counter_reset_seed[1].ENA
randi_input_data => randi_output_data_reg.IN1
randi_input_valid => seed_reg.OUTPUTSELECT
randi_input_valid => seed_reg.OUTPUTSELECT
randi_input_valid => seed_reg.OUTPUTSELECT
randi_input_valid => seed_reg.OUTPUTSELECT
randi_input_valid => seed_reg.OUTPUTSELECT
randi_input_valid => seed_reg.OUTPUTSELECT
randi_input_valid => seed_reg.OUTPUTSELECT
randi_input_valid => seed_reg.OUTPUTSELECT
randi_input_valid => seed_reg.OUTPUTSELECT
randi_input_valid => seed_reg.OUTPUTSELECT
randi_input_valid => seed_reg.OUTPUTSELECT
randi_input_valid => seed_reg.OUTPUTSELECT
randi_input_valid => seed_reg.OUTPUTSELECT
randi_input_valid => seed_reg.OUTPUTSELECT
randi_input_valid => seed_reg.OUTPUTSELECT
randi_input_valid => counter_reset_seed.OUTPUTSELECT
randi_input_valid => counter_reset_seed.OUTPUTSELECT
randi_input_valid => counter_reset_seed.OUTPUTSELECT
randi_input_valid => counter_reset_seed.OUTPUTSELECT
randi_input_valid => counter_reset_seed.OUTPUTSELECT
randi_input_valid => counter_reset_seed.OUTPUTSELECT
randi_input_valid => counter_reset_seed.OUTPUTSELECT
randi_input_valid => counter_reset_seed.OUTPUTSELECT
randi_input_valid => counter_reset_seed.OUTPUTSELECT
randi_input_valid => counter_reset_seed.OUTPUTSELECT
randi_input_valid => counter_reset_seed.OUTPUTSELECT
randi_input_valid => counter_reset_seed.OUTPUTSELECT
randi_input_valid => counter_reset_seed.OUTPUTSELECT
randi_input_valid => counter_reset_seed.OUTPUTSELECT
randi_input_valid => counter_reset_seed.OUTPUTSELECT
randi_input_valid => counter_reset_seed.OUTPUTSELECT
randi_input_valid => counter_reset_seed.OUTPUTSELECT
randi_input_valid => counter_reset_seed.OUTPUTSELECT
randi_input_valid => counter_reset_seed.OUTPUTSELECT
randi_input_valid => counter_reset_seed.OUTPUTSELECT
randi_input_valid => counter_reset_seed.OUTPUTSELECT
randi_input_valid => counter_reset_seed.OUTPUTSELECT
randi_input_valid => counter_reset_seed.OUTPUTSELECT
randi_input_valid => counter_reset_seed.OUTPUTSELECT
randi_input_valid => counter_reset_seed.OUTPUTSELECT
randi_input_valid => counter_reset_seed.OUTPUTSELECT
randi_input_valid => counter_reset_seed.OUTPUTSELECT
randi_input_valid => counter_reset_seed.OUTPUTSELECT
randi_input_valid => counter_reset_seed.OUTPUTSELECT
randi_input_valid => counter_reset_seed.OUTPUTSELECT
randi_input_valid => counter_reset_seed.OUTPUTSELECT
randi_input_valid => counter_reset_seed.OUTPUTSELECT
randi_input_valid => randi_output_valid.DATAIN
randi_input_valid => xor_1.OUTPUTSELECT
randi_input_valid => randi_output_data_reg.OUTPUTSELECT
randi_input_ready => randi_output_ready.DATAIN
randi_output_data <= randi_output_data_reg.DB_MAX_OUTPUT_PORT_TYPE
randi_output_valid <= randi_input_valid.DB_MAX_OUTPUT_PORT_TYPE
randi_output_ready <= randi_input_ready.DB_MAX_OUTPUT_PORT_TYPE


|TopWiMax_wrapper|TopWiMax:twimax_wrap|FEC:fec1
clk_50mhz => PingPong_flag.CLK
clk_50mhz => finished_tail_flag.CLK
clk_50mhz => counter_shift_and_output[0].CLK
clk_50mhz => counter_shift_and_output[1].CLK
clk_50mhz => counter_shift_and_output[2].CLK
clk_50mhz => counter_shift_and_output[3].CLK
clk_50mhz => counter_shift_and_output[4].CLK
clk_50mhz => counter_shift_and_output[5].CLK
clk_50mhz => counter_shift_and_output[6].CLK
clk_50mhz => counter_shift_and_output[7].CLK
clk_50mhz => counter_shift_and_output[8].CLK
clk_50mhz => counter_shift_and_output[9].CLK
clk_50mhz => counter_shift_and_output[10].CLK
clk_50mhz => counter_shift_and_output[11].CLK
clk_50mhz => counter_shift_and_output[12].CLK
clk_50mhz => counter_shift_and_output[13].CLK
clk_50mhz => counter_shift_and_output[14].CLK
clk_50mhz => counter_shift_and_output[15].CLK
clk_50mhz => counter_shift_and_output[16].CLK
clk_50mhz => counter_shift_and_output[17].CLK
clk_50mhz => counter_shift_and_output[18].CLK
clk_50mhz => counter_shift_and_output[19].CLK
clk_50mhz => counter_shift_and_output[20].CLK
clk_50mhz => counter_shift_and_output[21].CLK
clk_50mhz => counter_shift_and_output[22].CLK
clk_50mhz => counter_shift_and_output[23].CLK
clk_50mhz => counter_shift_and_output[24].CLK
clk_50mhz => counter_shift_and_output[25].CLK
clk_50mhz => counter_shift_and_output[26].CLK
clk_50mhz => counter_shift_and_output[27].CLK
clk_50mhz => counter_shift_and_output[28].CLK
clk_50mhz => counter_shift_and_output[29].CLK
clk_50mhz => counter_shift_and_output[30].CLK
clk_50mhz => counter_shift_and_output[31].CLK
clk_50mhz => shift_reg2[0].CLK
clk_50mhz => shift_reg2[1].CLK
clk_50mhz => shift_reg2[2].CLK
clk_50mhz => shift_reg2[3].CLK
clk_50mhz => shift_reg2[4].CLK
clk_50mhz => shift_reg2[5].CLK
clk_50mhz => shift_reg[0].CLK
clk_50mhz => shift_reg[1].CLK
clk_50mhz => shift_reg[2].CLK
clk_50mhz => shift_reg[3].CLK
clk_50mhz => shift_reg[4].CLK
clk_50mhz => shift_reg[5].CLK
clk_50mhz => counter_buffer_input[0].CLK
clk_50mhz => counter_buffer_input[1].CLK
clk_50mhz => counter_buffer_input[2].CLK
clk_50mhz => counter_buffer_input[3].CLK
clk_50mhz => counter_buffer_input[4].CLK
clk_50mhz => counter_buffer_input[5].CLK
clk_50mhz => counter_buffer_input[6].CLK
clk_50mhz => counter_buffer_input[7].CLK
clk_50mhz => counter_buffer_input[8].CLK
clk_50mhz => counter_buffer_input[9].CLK
clk_50mhz => counter_buffer_input[10].CLK
clk_50mhz => counter_buffer_input[11].CLK
clk_50mhz => counter_buffer_input[12].CLK
clk_50mhz => counter_buffer_input[13].CLK
clk_50mhz => counter_buffer_input[14].CLK
clk_50mhz => counter_buffer_input[15].CLK
clk_50mhz => counter_buffer_input[16].CLK
clk_50mhz => counter_buffer_input[17].CLK
clk_50mhz => counter_buffer_input[18].CLK
clk_50mhz => counter_buffer_input[19].CLK
clk_50mhz => counter_buffer_input[20].CLK
clk_50mhz => counter_buffer_input[21].CLK
clk_50mhz => counter_buffer_input[22].CLK
clk_50mhz => counter_buffer_input[23].CLK
clk_50mhz => counter_buffer_input[24].CLK
clk_50mhz => counter_buffer_input[25].CLK
clk_50mhz => counter_buffer_input[26].CLK
clk_50mhz => counter_buffer_input[27].CLK
clk_50mhz => counter_buffer_input[28].CLK
clk_50mhz => counter_buffer_input[29].CLK
clk_50mhz => counter_buffer_input[30].CLK
clk_50mhz => counter_buffer_input[31].CLK
clk_50mhz => FEC_RAM_2PORTS:ram1.clock
clk_50mhz => input_state_reg~3.DATAIN
clk_100mhz => output_state_reg~1.DATAIN
reset => PingPong_flag.ACLR
reset => finished_tail_flag.ACLR
reset => counter_shift_and_output[0].ACLR
reset => counter_shift_and_output[1].ACLR
reset => counter_shift_and_output[2].ACLR
reset => counter_shift_and_output[3].ACLR
reset => counter_shift_and_output[4].ACLR
reset => counter_shift_and_output[5].ACLR
reset => counter_shift_and_output[6].ACLR
reset => counter_shift_and_output[7].ACLR
reset => counter_shift_and_output[8].ACLR
reset => counter_shift_and_output[9].ACLR
reset => counter_shift_and_output[10].ACLR
reset => counter_shift_and_output[11].ACLR
reset => counter_shift_and_output[12].ACLR
reset => counter_shift_and_output[13].ACLR
reset => counter_shift_and_output[14].ACLR
reset => counter_shift_and_output[15].ACLR
reset => counter_shift_and_output[16].ACLR
reset => counter_shift_and_output[17].ACLR
reset => counter_shift_and_output[18].ACLR
reset => counter_shift_and_output[19].ACLR
reset => counter_shift_and_output[20].ACLR
reset => counter_shift_and_output[21].ACLR
reset => counter_shift_and_output[22].ACLR
reset => counter_shift_and_output[23].ACLR
reset => counter_shift_and_output[24].ACLR
reset => counter_shift_and_output[25].ACLR
reset => counter_shift_and_output[26].ACLR
reset => counter_shift_and_output[27].ACLR
reset => counter_shift_and_output[28].ACLR
reset => counter_shift_and_output[29].ACLR
reset => counter_shift_and_output[30].ACLR
reset => counter_shift_and_output[31].ACLR
reset => shift_reg2[0].ACLR
reset => shift_reg2[1].ACLR
reset => shift_reg2[2].ACLR
reset => shift_reg2[3].ACLR
reset => shift_reg2[4].ACLR
reset => shift_reg2[5].ACLR
reset => shift_reg[0].ACLR
reset => shift_reg[1].ACLR
reset => shift_reg[2].ACLR
reset => shift_reg[3].ACLR
reset => shift_reg[4].ACLR
reset => shift_reg[5].ACLR
reset => counter_buffer_input[0].ACLR
reset => counter_buffer_input[1].ACLR
reset => counter_buffer_input[2].ACLR
reset => counter_buffer_input[3].ACLR
reset => counter_buffer_input[4].ACLR
reset => counter_buffer_input[5].ACLR
reset => counter_buffer_input[6].ACLR
reset => counter_buffer_input[7].ACLR
reset => counter_buffer_input[8].ACLR
reset => counter_buffer_input[9].ACLR
reset => counter_buffer_input[10].ACLR
reset => counter_buffer_input[11].ACLR
reset => counter_buffer_input[12].ACLR
reset => counter_buffer_input[13].ACLR
reset => counter_buffer_input[14].ACLR
reset => counter_buffer_input[15].ACLR
reset => counter_buffer_input[16].ACLR
reset => counter_buffer_input[17].ACLR
reset => counter_buffer_input[18].ACLR
reset => counter_buffer_input[19].ACLR
reset => counter_buffer_input[20].ACLR
reset => counter_buffer_input[21].ACLR
reset => counter_buffer_input[22].ACLR
reset => counter_buffer_input[23].ACLR
reset => counter_buffer_input[24].ACLR
reset => counter_buffer_input[25].ACLR
reset => counter_buffer_input[26].ACLR
reset => counter_buffer_input[27].ACLR
reset => counter_buffer_input[28].ACLR
reset => counter_buffer_input[29].ACLR
reset => counter_buffer_input[30].ACLR
reset => counter_buffer_input[31].ACLR
reset => output_state_reg~3.DATAIN
reset => input_state_reg~5.DATAIN
FEC_input_data => shift_reg.DATAB
FEC_input_data => shift_reg.DATAB
FEC_input_data => shift_reg.DATAB
FEC_input_data => shift_reg.DATAB
FEC_input_data => shift_reg.DATAB
FEC_input_data => shift_reg.DATAB
FEC_input_data => shift_reg2.DATAB
FEC_input_data => shift_reg2.DATAB
FEC_input_data => shift_reg2.DATAB
FEC_input_data => shift_reg2.DATAB
FEC_input_data => shift_reg2.DATAB
FEC_input_data => shift_reg2.DATAB
FEC_input_data => FEC_RAM_2PORTS:ram1.data_a[0]
FEC_input_valid => counter_buffer_input.OUTPUTSELECT
FEC_input_valid => counter_buffer_input.OUTPUTSELECT
FEC_input_valid => counter_buffer_input.OUTPUTSELECT
FEC_input_valid => counter_buffer_input.OUTPUTSELECT
FEC_input_valid => counter_buffer_input.OUTPUTSELECT
FEC_input_valid => counter_buffer_input.OUTPUTSELECT
FEC_input_valid => counter_buffer_input.OUTPUTSELECT
FEC_input_valid => counter_buffer_input.OUTPUTSELECT
FEC_input_valid => counter_buffer_input.OUTPUTSELECT
FEC_input_valid => counter_buffer_input.OUTPUTSELECT
FEC_input_valid => counter_buffer_input.OUTPUTSELECT
FEC_input_valid => counter_buffer_input.OUTPUTSELECT
FEC_input_valid => counter_buffer_input.OUTPUTSELECT
FEC_input_valid => counter_buffer_input.OUTPUTSELECT
FEC_input_valid => counter_buffer_input.OUTPUTSELECT
FEC_input_valid => counter_buffer_input.OUTPUTSELECT
FEC_input_valid => counter_buffer_input.OUTPUTSELECT
FEC_input_valid => counter_buffer_input.OUTPUTSELECT
FEC_input_valid => counter_buffer_input.OUTPUTSELECT
FEC_input_valid => counter_buffer_input.OUTPUTSELECT
FEC_input_valid => counter_buffer_input.OUTPUTSELECT
FEC_input_valid => counter_buffer_input.OUTPUTSELECT
FEC_input_valid => counter_buffer_input.OUTPUTSELECT
FEC_input_valid => counter_buffer_input.OUTPUTSELECT
FEC_input_valid => counter_buffer_input.OUTPUTSELECT
FEC_input_valid => counter_buffer_input.OUTPUTSELECT
FEC_input_valid => counter_buffer_input.OUTPUTSELECT
FEC_input_valid => counter_buffer_input.OUTPUTSELECT
FEC_input_valid => counter_buffer_input.OUTPUTSELECT
FEC_input_valid => counter_buffer_input.OUTPUTSELECT
FEC_input_valid => counter_buffer_input.OUTPUTSELECT
FEC_input_valid => counter_buffer_input.OUTPUTSELECT
FEC_input_valid => Selector33.IN2
FEC_input_valid => FEC_RAM_2PORTS:ram1.wren_a
FEC_input_valid => process_0.IN1
FEC_input_valid => Selector32.IN1
FEC_input_ready => FEC_output_ready.DATAIN
FEC_output_data <= FEC_output_data.DB_MAX_OUTPUT_PORT_TYPE
FEC_output_valid <= FEC_encoder_out_valid.DB_MAX_OUTPUT_PORT_TYPE
FEC_output_ready <= FEC_input_ready.DB_MAX_OUTPUT_PORT_TYPE


|TopWiMax_wrapper|TopWiMax:twimax_wrap|FEC:fec1|FEC_RAM_2PORTS:ram1
address_a[0] => altsyncram:altsyncram_component.address_a[0]
address_a[1] => altsyncram:altsyncram_component.address_a[1]
address_a[2] => altsyncram:altsyncram_component.address_a[2]
address_a[3] => altsyncram:altsyncram_component.address_a[3]
address_a[4] => altsyncram:altsyncram_component.address_a[4]
address_a[5] => altsyncram:altsyncram_component.address_a[5]
address_a[6] => altsyncram:altsyncram_component.address_a[6]
address_a[7] => altsyncram:altsyncram_component.address_a[7]
address_b[0] => altsyncram:altsyncram_component.address_b[0]
address_b[1] => altsyncram:altsyncram_component.address_b[1]
address_b[2] => altsyncram:altsyncram_component.address_b[2]
address_b[3] => altsyncram:altsyncram_component.address_b[3]
address_b[4] => altsyncram:altsyncram_component.address_b[4]
address_b[5] => altsyncram:altsyncram_component.address_b[5]
address_b[6] => altsyncram:altsyncram_component.address_b[6]
address_b[7] => altsyncram:altsyncram_component.address_b[7]
clock => altsyncram:altsyncram_component.clock0
data_a[0] => altsyncram:altsyncram_component.data_a[0]
data_b[0] => altsyncram:altsyncram_component.data_b[0]
wren_a => altsyncram:altsyncram_component.wren_a
wren_b => altsyncram:altsyncram_component.wren_b
q_a[0] <= altsyncram:altsyncram_component.q_a[0]
q_b[0] <= altsyncram:altsyncram_component.q_b[0]


|TopWiMax_wrapper|TopWiMax:twimax_wrap|FEC:fec1|FEC_RAM_2PORTS:ram1|altsyncram:altsyncram_component
wren_a => altsyncram_1014:auto_generated.wren_a
rden_a => ~NO_FANOUT~
wren_b => altsyncram_1014:auto_generated.wren_b
rden_b => ~NO_FANOUT~
data_a[0] => altsyncram_1014:auto_generated.data_a[0]
data_b[0] => altsyncram_1014:auto_generated.data_b[0]
address_a[0] => altsyncram_1014:auto_generated.address_a[0]
address_a[1] => altsyncram_1014:auto_generated.address_a[1]
address_a[2] => altsyncram_1014:auto_generated.address_a[2]
address_a[3] => altsyncram_1014:auto_generated.address_a[3]
address_a[4] => altsyncram_1014:auto_generated.address_a[4]
address_a[5] => altsyncram_1014:auto_generated.address_a[5]
address_a[6] => altsyncram_1014:auto_generated.address_a[6]
address_a[7] => altsyncram_1014:auto_generated.address_a[7]
address_b[0] => altsyncram_1014:auto_generated.address_b[0]
address_b[1] => altsyncram_1014:auto_generated.address_b[1]
address_b[2] => altsyncram_1014:auto_generated.address_b[2]
address_b[3] => altsyncram_1014:auto_generated.address_b[3]
address_b[4] => altsyncram_1014:auto_generated.address_b[4]
address_b[5] => altsyncram_1014:auto_generated.address_b[5]
address_b[6] => altsyncram_1014:auto_generated.address_b[6]
address_b[7] => altsyncram_1014:auto_generated.address_b[7]
addressstall_a => ~NO_FANOUT~
addressstall_b => ~NO_FANOUT~
clock0 => altsyncram_1014:auto_generated.clock0
clock1 => ~NO_FANOUT~
clocken0 => ~NO_FANOUT~
clocken1 => ~NO_FANOUT~
clocken2 => ~NO_FANOUT~
clocken3 => ~NO_FANOUT~
aclr0 => ~NO_FANOUT~
aclr1 => ~NO_FANOUT~
byteena_a[0] => ~NO_FANOUT~
byteena_b[0] => ~NO_FANOUT~
q_a[0] <= altsyncram_1014:auto_generated.q_a[0]
q_b[0] <= altsyncram_1014:auto_generated.q_b[0]
eccstatus[0] <= <GND>
eccstatus[1] <= <GND>
eccstatus[2] <= <GND>


|TopWiMax_wrapper|TopWiMax:twimax_wrap|FEC:fec1|FEC_RAM_2PORTS:ram1|altsyncram:altsyncram_component|altsyncram_1014:auto_generated
address_a[0] => ram_block1a0.PORTAADDR
address_a[1] => ram_block1a0.PORTAADDR1
address_a[2] => ram_block1a0.PORTAADDR2
address_a[3] => ram_block1a0.PORTAADDR3
address_a[4] => ram_block1a0.PORTAADDR4
address_a[5] => ram_block1a0.PORTAADDR5
address_a[6] => ram_block1a0.PORTAADDR6
address_a[7] => ram_block1a0.PORTAADDR7
address_b[0] => ram_block1a0.PORTBADDR
address_b[1] => ram_block1a0.PORTBADDR1
address_b[2] => ram_block1a0.PORTBADDR2
address_b[3] => ram_block1a0.PORTBADDR3
address_b[4] => ram_block1a0.PORTBADDR4
address_b[5] => ram_block1a0.PORTBADDR5
address_b[6] => ram_block1a0.PORTBADDR6
address_b[7] => ram_block1a0.PORTBADDR7
clock0 => ram_block1a0.CLK0
data_a[0] => ram_block1a0.PORTADATAIN
data_b[0] => ram_block1a0.PORTBDATAIN
q_a[0] <= ram_block1a0.PORTADATAOUT
q_b[0] <= ram_block1a0.PORTBDATAOUT
wren_a => ram_block1a0.PORTAWE
wren_b => ram_block1a0.PORTBWE


|TopWiMax_wrapper|TopWiMax:twimax_wrap|INTER:inter1
clk_100MHz => PingPong_flag.CLK
clk_100MHz => INTER_Output_valid~reg0.CLK
clk_100MHz => counter_out[0].CLK
clk_100MHz => counter_out[1].CLK
clk_100MHz => counter_out[2].CLK
clk_100MHz => counter_out[3].CLK
clk_100MHz => counter_out[4].CLK
clk_100MHz => counter_out[5].CLK
clk_100MHz => counter_out[6].CLK
clk_100MHz => counter_out[7].CLK
clk_100MHz => counter_out[8].CLK
clk_100MHz => counter_out[9].CLK
clk_100MHz => counter_out[10].CLK
clk_100MHz => counter_out[11].CLK
clk_100MHz => counter_out[12].CLK
clk_100MHz => counter_out[13].CLK
clk_100MHz => counter_out[14].CLK
clk_100MHz => counter_out[15].CLK
clk_100MHz => counter_out[16].CLK
clk_100MHz => counter_out[17].CLK
clk_100MHz => counter_out[18].CLK
clk_100MHz => counter_out[19].CLK
clk_100MHz => counter_out[20].CLK
clk_100MHz => counter_out[21].CLK
clk_100MHz => counter_out[22].CLK
clk_100MHz => counter_out[23].CLK
clk_100MHz => counter_out[24].CLK
clk_100MHz => counter_out[25].CLK
clk_100MHz => counter_out[26].CLK
clk_100MHz => counter_out[27].CLK
clk_100MHz => counter_out[28].CLK
clk_100MHz => counter_out[29].CLK
clk_100MHz => counter_out[30].CLK
clk_100MHz => counter_out[31].CLK
clk_100MHz => counter[0].CLK
clk_100MHz => counter[1].CLK
clk_100MHz => counter[2].CLK
clk_100MHz => counter[3].CLK
clk_100MHz => counter[4].CLK
clk_100MHz => counter[5].CLK
clk_100MHz => counter[6].CLK
clk_100MHz => counter[7].CLK
clk_100MHz => counter_kmod16[0].CLK
clk_100MHz => counter_kmod16[1].CLK
clk_100MHz => counter_kmod16[2].CLK
clk_100MHz => counter_kmod16[3].CLK
clk_100MHz => INTER_RAM_2PORT:ram2.clock
clk_100MHz => state_reg~1.DATAIN
reset => PingPong_flag.ACLR
reset => INTER_Output_valid~reg0.ACLR
reset => counter_out[0].ACLR
reset => counter_out[1].ACLR
reset => counter_out[2].ACLR
reset => counter_out[3].ACLR
reset => counter_out[4].ACLR
reset => counter_out[5].ACLR
reset => counter_out[6].ACLR
reset => counter_out[7].ACLR
reset => counter_out[8].ACLR
reset => counter_out[9].ACLR
reset => counter_out[10].ACLR
reset => counter_out[11].ACLR
reset => counter_out[12].ACLR
reset => counter_out[13].ACLR
reset => counter_out[14].ACLR
reset => counter_out[15].ACLR
reset => counter_out[16].ACLR
reset => counter_out[17].ACLR
reset => counter_out[18].ACLR
reset => counter_out[19].ACLR
reset => counter_out[20].ACLR
reset => counter_out[21].ACLR
reset => counter_out[22].ACLR
reset => counter_out[23].ACLR
reset => counter_out[24].ACLR
reset => counter_out[25].ACLR
reset => counter_out[26].ACLR
reset => counter_out[27].ACLR
reset => counter_out[28].ACLR
reset => counter_out[29].ACLR
reset => counter_out[30].ACLR
reset => counter_out[31].ACLR
reset => counter[0].ACLR
reset => counter[1].ACLR
reset => counter[2].ACLR
reset => counter[3].ACLR
reset => counter[4].ACLR
reset => counter[5].ACLR
reset => counter[6].ACLR
reset => counter[7].ACLR
reset => counter_kmod16[0].ACLR
reset => counter_kmod16[1].ACLR
reset => counter_kmod16[2].ACLR
reset => counter_kmod16[3].ACLR
reset => state_reg~3.DATAIN
INTER_Input_data => INTER_RAM_2PORT:ram2.data_a[0]
INTER_input_valid => counter_kmod16.OUTPUTSELECT
INTER_input_valid => counter_kmod16.OUTPUTSELECT
INTER_input_valid => counter_kmod16.OUTPUTSELECT
INTER_input_valid => counter_kmod16.OUTPUTSELECT
INTER_input_valid => counter.OUTPUTSELECT
INTER_input_valid => counter.OUTPUTSELECT
INTER_input_valid => counter.OUTPUTSELECT
INTER_input_valid => counter.OUTPUTSELECT
INTER_input_valid => counter.OUTPUTSELECT
INTER_input_valid => counter.OUTPUTSELECT
INTER_input_valid => counter.OUTPUTSELECT
INTER_input_valid => counter.OUTPUTSELECT
INTER_input_valid => Selector14.IN2
INTER_input_valid => INTER_RAM_2PORT:ram2.wren_a
INTER_input_valid => process_0.IN1
INTER_input_valid => Selector13.IN1
INTER_input_ready => INTER_Output_ready.DATAIN
INTER_Output_data <= INTER_RAM_2PORT:ram2.q_b[0]
INTER_Output_valid <= INTER_Output_valid~reg0.DB_MAX_OUTPUT_PORT_TYPE
INTER_Output_ready <= INTER_input_ready.DB_MAX_OUTPUT_PORT_TYPE


|TopWiMax_wrapper|TopWiMax:twimax_wrap|INTER:inter1|INTER_RAM_2PORT:ram2
address_a[0] => altsyncram:altsyncram_component.address_a[0]
address_a[1] => altsyncram:altsyncram_component.address_a[1]
address_a[2] => altsyncram:altsyncram_component.address_a[2]
address_a[3] => altsyncram:altsyncram_component.address_a[3]
address_a[4] => altsyncram:altsyncram_component.address_a[4]
address_a[5] => altsyncram:altsyncram_component.address_a[5]
address_a[6] => altsyncram:altsyncram_component.address_a[6]
address_a[7] => altsyncram:altsyncram_component.address_a[7]
address_a[8] => altsyncram:altsyncram_component.address_a[8]
address_b[0] => altsyncram:altsyncram_component.address_b[0]
address_b[1] => altsyncram:altsyncram_component.address_b[1]
address_b[2] => altsyncram:altsyncram_component.address_b[2]
address_b[3] => altsyncram:altsyncram_component.address_b[3]
address_b[4] => altsyncram:altsyncram_component.address_b[4]
address_b[5] => altsyncram:altsyncram_component.address_b[5]
address_b[6] => altsyncram:altsyncram_component.address_b[6]
address_b[7] => altsyncram:altsyncram_component.address_b[7]
address_b[8] => altsyncram:altsyncram_component.address_b[8]
clock => altsyncram:altsyncram_component.clock0
data_a[0] => altsyncram:altsyncram_component.data_a[0]
data_b[0] => altsyncram:altsyncram_component.data_b[0]
wren_a => altsyncram:altsyncram_component.wren_a
wren_b => altsyncram:altsyncram_component.wren_b
q_a[0] <= altsyncram:altsyncram_component.q_a[0]
q_b[0] <= altsyncram:altsyncram_component.q_b[0]


|TopWiMax_wrapper|TopWiMax:twimax_wrap|INTER:inter1|INTER_RAM_2PORT:ram2|altsyncram:altsyncram_component
wren_a => altsyncram_9014:auto_generated.wren_a
rden_a => ~NO_FANOUT~
wren_b => altsyncram_9014:auto_generated.wren_b
rden_b => ~NO_FANOUT~
data_a[0] => altsyncram_9014:auto_generated.data_a[0]
data_b[0] => altsyncram_9014:auto_generated.data_b[0]
address_a[0] => altsyncram_9014:auto_generated.address_a[0]
address_a[1] => altsyncram_9014:auto_generated.address_a[1]
address_a[2] => altsyncram_9014:auto_generated.address_a[2]
address_a[3] => altsyncram_9014:auto_generated.address_a[3]
address_a[4] => altsyncram_9014:auto_generated.address_a[4]
address_a[5] => altsyncram_9014:auto_generated.address_a[5]
address_a[6] => altsyncram_9014:auto_generated.address_a[6]
address_a[7] => altsyncram_9014:auto_generated.address_a[7]
address_a[8] => altsyncram_9014:auto_generated.address_a[8]
address_b[0] => altsyncram_9014:auto_generated.address_b[0]
address_b[1] => altsyncram_9014:auto_generated.address_b[1]
address_b[2] => altsyncram_9014:auto_generated.address_b[2]
address_b[3] => altsyncram_9014:auto_generated.address_b[3]
address_b[4] => altsyncram_9014:auto_generated.address_b[4]
address_b[5] => altsyncram_9014:auto_generated.address_b[5]
address_b[6] => altsyncram_9014:auto_generated.address_b[6]
address_b[7] => altsyncram_9014:auto_generated.address_b[7]
address_b[8] => altsyncram_9014:auto_generated.address_b[8]
addressstall_a => ~NO_FANOUT~
addressstall_b => ~NO_FANOUT~
clock0 => altsyncram_9014:auto_generated.clock0
clock1 => ~NO_FANOUT~
clocken0 => ~NO_FANOUT~
clocken1 => ~NO_FANOUT~
clocken2 => ~NO_FANOUT~
clocken3 => ~NO_FANOUT~
aclr0 => ~NO_FANOUT~
aclr1 => ~NO_FANOUT~
byteena_a[0] => ~NO_FANOUT~
byteena_b[0] => ~NO_FANOUT~
q_a[0] <= altsyncram_9014:auto_generated.q_a[0]
q_b[0] <= altsyncram_9014:auto_generated.q_b[0]
eccstatus[0] <= <GND>
eccstatus[1] <= <GND>
eccstatus[2] <= <GND>


|TopWiMax_wrapper|TopWiMax:twimax_wrap|INTER:inter1|INTER_RAM_2PORT:ram2|altsyncram:altsyncram_component|altsyncram_9014:auto_generated
address_a[0] => ram_block1a0.PORTAADDR
address_a[1] => ram_block1a0.PORTAADDR1
address_a[2] => ram_block1a0.PORTAADDR2
address_a[3] => ram_block1a0.PORTAADDR3
address_a[4] => ram_block1a0.PORTAADDR4
address_a[5] => ram_block1a0.PORTAADDR5
address_a[6] => ram_block1a0.PORTAADDR6
address_a[7] => ram_block1a0.PORTAADDR7
address_a[8] => ram_block1a0.PORTAADDR8
address_b[0] => ram_block1a0.PORTBADDR
address_b[1] => ram_block1a0.PORTBADDR1
address_b[2] => ram_block1a0.PORTBADDR2
address_b[3] => ram_block1a0.PORTBADDR3
address_b[4] => ram_block1a0.PORTBADDR4
address_b[5] => ram_block1a0.PORTBADDR5
address_b[6] => ram_block1a0.PORTBADDR6
address_b[7] => ram_block1a0.PORTBADDR7
address_b[8] => ram_block1a0.PORTBADDR8
clock0 => ram_block1a0.CLK0
data_a[0] => ram_block1a0.PORTADATAIN
data_b[0] => ram_block1a0.PORTBDATAIN
q_a[0] <= ram_block1a0.PORTADATAOUT
q_b[0] <= ram_block1a0.PORTBDATAOUT
wren_a => ram_block1a0.PORTAWE
wren_b => ram_block1a0.PORTBWE


|TopWiMax_wrapper|TopWiMax:twimax_wrap|MODU:modu1
clk_100MHz => MODU_output_valid~reg0.CLK
clk_100MHz => MODU_output_I[0]~reg0.CLK
clk_100MHz => MODU_output_I[1]~reg0.CLK
clk_100MHz => MODU_output_I[2]~reg0.CLK
clk_100MHz => MODU_output_I[3]~reg0.CLK
clk_100MHz => MODU_output_I[4]~reg0.CLK
clk_100MHz => MODU_output_I[5]~reg0.CLK
clk_100MHz => MODU_output_I[6]~reg0.CLK
clk_100MHz => MODU_output_I[7]~reg0.CLK
clk_100MHz => MODU_output_I[8]~reg0.CLK
clk_100MHz => MODU_output_I[9]~reg0.CLK
clk_100MHz => MODU_output_I[10]~reg0.CLK
clk_100MHz => MODU_output_I[11]~reg0.CLK
clk_100MHz => MODU_output_I[12]~reg0.CLK
clk_100MHz => MODU_output_I[13]~reg0.CLK
clk_100MHz => MODU_output_I[14]~reg0.CLK
clk_100MHz => MODU_output_I[15]~reg0.CLK
clk_100MHz => MODU_output_Q[0]~reg0.CLK
clk_100MHz => MODU_output_Q[1]~reg0.CLK
clk_100MHz => MODU_output_Q[2]~reg0.CLK
clk_100MHz => MODU_output_Q[3]~reg0.CLK
clk_100MHz => MODU_output_Q[4]~reg0.CLK
clk_100MHz => MODU_output_Q[5]~reg0.CLK
clk_100MHz => MODU_output_Q[6]~reg0.CLK
clk_100MHz => MODU_output_Q[7]~reg0.CLK
clk_100MHz => MODU_output_Q[8]~reg0.CLK
clk_100MHz => MODU_output_Q[9]~reg0.CLK
clk_100MHz => MODU_output_Q[10]~reg0.CLK
clk_100MHz => MODU_output_Q[11]~reg0.CLK
clk_100MHz => MODU_output_Q[12]~reg0.CLK
clk_100MHz => MODU_output_Q[13]~reg0.CLK
clk_100MHz => MODU_output_Q[14]~reg0.CLK
clk_100MHz => MODU_output_Q[15]~reg0.CLK
clk_100MHz => Finished_Flag.CLK
clk_100MHz => flag.CLK
clk_100MHz => MODU_input_data_buffer.CLK
reset => MODU_output_valid~reg0.ACLR
reset => MODU_output_I[0]~reg0.ACLR
reset => MODU_output_I[1]~reg0.ACLR
reset => MODU_output_I[2]~reg0.ACLR
reset => MODU_output_I[3]~reg0.ACLR
reset => MODU_output_I[4]~reg0.ACLR
reset => MODU_output_I[5]~reg0.ACLR
reset => MODU_output_I[6]~reg0.ACLR
reset => MODU_output_I[7]~reg0.ACLR
reset => MODU_output_I[8]~reg0.ACLR
reset => MODU_output_I[9]~reg0.ACLR
reset => MODU_output_I[10]~reg0.ACLR
reset => MODU_output_I[11]~reg0.ACLR
reset => MODU_output_I[12]~reg0.ACLR
reset => MODU_output_I[13]~reg0.ACLR
reset => MODU_output_I[14]~reg0.ACLR
reset => MODU_output_I[15]~reg0.ACLR
reset => MODU_output_Q[0]~reg0.ACLR
reset => MODU_output_Q[1]~reg0.ACLR
reset => MODU_output_Q[2]~reg0.ACLR
reset => MODU_output_Q[3]~reg0.ACLR
reset => MODU_output_Q[4]~reg0.ACLR
reset => MODU_output_Q[5]~reg0.ACLR
reset => MODU_output_Q[6]~reg0.ACLR
reset => MODU_output_Q[7]~reg0.ACLR
reset => MODU_output_Q[8]~reg0.ACLR
reset => MODU_output_Q[9]~reg0.ACLR
reset => MODU_output_Q[10]~reg0.ACLR
reset => MODU_output_Q[11]~reg0.ACLR
reset => MODU_output_Q[12]~reg0.ACLR
reset => MODU_output_Q[13]~reg0.ACLR
reset => MODU_output_Q[14]~reg0.ACLR
reset => MODU_output_Q[15]~reg0.ACLR
reset => Finished_Flag.ACLR
reset => flag.ACLR
reset => MODU_input_data_buffer.ACLR
MODU_input_data => MODU_input_data_fuse[1].DATAB
MODU_input_data => MODU_input_data_buffer.DATAIN
MODU_input_valid => MODU_output_valid.OUTPUTSELECT
MODU_input_valid => MODU_input_data_buffer.ENA
MODU_input_valid => flag.ENA
MODU_input_valid => Finished_Flag.ENA
MODU_input_valid => MODU_output_Q[15]~reg0.ENA
MODU_input_valid => MODU_output_Q[14]~reg0.ENA
MODU_input_valid => MODU_output_Q[13]~reg0.ENA
MODU_input_valid => MODU_output_Q[12]~reg0.ENA
MODU_input_valid => MODU_output_Q[11]~reg0.ENA
MODU_input_valid => MODU_output_Q[10]~reg0.ENA
MODU_input_valid => MODU_output_Q[9]~reg0.ENA
MODU_input_valid => MODU_output_Q[8]~reg0.ENA
MODU_input_valid => MODU_output_Q[7]~reg0.ENA
MODU_input_valid => MODU_output_Q[6]~reg0.ENA
MODU_input_valid => MODU_output_Q[5]~reg0.ENA
MODU_input_valid => MODU_output_Q[4]~reg0.ENA
MODU_input_valid => MODU_output_Q[3]~reg0.ENA
MODU_input_valid => MODU_output_Q[2]~reg0.ENA
MODU_input_valid => MODU_output_Q[1]~reg0.ENA
MODU_input_valid => MODU_output_Q[0]~reg0.ENA
MODU_input_valid => MODU_output_I[15]~reg0.ENA
MODU_input_valid => MODU_output_I[14]~reg0.ENA
MODU_input_valid => MODU_output_I[13]~reg0.ENA
MODU_input_valid => MODU_output_I[12]~reg0.ENA
MODU_input_valid => MODU_output_I[11]~reg0.ENA
MODU_input_valid => MODU_output_I[10]~reg0.ENA
MODU_input_valid => MODU_output_I[9]~reg0.ENA
MODU_input_valid => MODU_output_I[8]~reg0.ENA
MODU_input_valid => MODU_output_I[7]~reg0.ENA
MODU_input_valid => MODU_output_I[6]~reg0.ENA
MODU_input_valid => MODU_output_I[5]~reg0.ENA
MODU_input_valid => MODU_output_I[4]~reg0.ENA
MODU_input_valid => MODU_output_I[3]~reg0.ENA
MODU_input_valid => MODU_output_I[2]~reg0.ENA
MODU_input_valid => MODU_output_I[1]~reg0.ENA
MODU_input_valid => MODU_output_I[0]~reg0.ENA
MODU_input_ready => MODU_output_ready.DATAIN
MODU_output_Q[0] <= MODU_output_Q[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
MODU_output_Q[1] <= MODU_output_Q[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
MODU_output_Q[2] <= MODU_output_Q[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
MODU_output_Q[3] <= MODU_output_Q[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
MODU_output_Q[4] <= MODU_output_Q[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
MODU_output_Q[5] <= MODU_output_Q[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
MODU_output_Q[6] <= MODU_output_Q[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
MODU_output_Q[7] <= MODU_output_Q[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
MODU_output_Q[8] <= MODU_output_Q[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
MODU_output_Q[9] <= MODU_output_Q[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
MODU_output_Q[10] <= MODU_output_Q[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
MODU_output_Q[11] <= MODU_output_Q[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
MODU_output_Q[12] <= MODU_output_Q[12]~reg0.DB_MAX_OUTPUT_PORT_TYPE
MODU_output_Q[13] <= MODU_output_Q[13]~reg0.DB_MAX_OUTPUT_PORT_TYPE
MODU_output_Q[14] <= MODU_output_Q[14]~reg0.DB_MAX_OUTPUT_PORT_TYPE
MODU_output_Q[15] <= MODU_output_Q[15]~reg0.DB_MAX_OUTPUT_PORT_TYPE
MODU_output_I[0] <= MODU_output_I[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
MODU_output_I[1] <= MODU_output_I[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
MODU_output_I[2] <= MODU_output_I[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
MODU_output_I[3] <= MODU_output_I[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
MODU_output_I[4] <= MODU_output_I[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
MODU_output_I[5] <= MODU_output_I[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
MODU_output_I[6] <= MODU_output_I[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
MODU_output_I[7] <= MODU_output_I[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
MODU_output_I[8] <= MODU_output_I[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
MODU_output_I[9] <= MODU_output_I[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
MODU_output_I[10] <= MODU_output_I[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
MODU_output_I[11] <= MODU_output_I[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
MODU_output_I[12] <= MODU_output_I[12]~reg0.DB_MAX_OUTPUT_PORT_TYPE
MODU_output_I[13] <= MODU_output_I[13]~reg0.DB_MAX_OUTPUT_PORT_TYPE
MODU_output_I[14] <= MODU_output_I[14]~reg0.DB_MAX_OUTPUT_PORT_TYPE
MODU_output_I[15] <= MODU_output_I[15]~reg0.DB_MAX_OUTPUT_PORT_TYPE
MODU_output_valid <= MODU_output_valid~reg0.DB_MAX_OUTPUT_PORT_TYPE
MODU_output_ready <= MODU_input_ready.DB_MAX_OUTPUT_PORT_TYPE


